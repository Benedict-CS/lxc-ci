name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  REGISTRY_DOMAIN: registry.benedicttiong.site
  IMAGE_NAME: test-service
  API_HOST: controller.benedicttiong.site # 建議將此 IP 也放入 Secret
  DEVICE_ID: "test-1"
  TOKEN: ""

jobs:
  #====================================================
  # CI Job: Build and Push Docker Image (你的版本)
  #====================================================
  CI-Pipeline:
    name: CI-Pipeline
    runs-on: ubuntu-latest
    outputs:
      IMAGE_URL: ${{ steps.meta.outputs.IMAGE_URL }}
      IMAGE_TAG: ${{ steps.meta.outputs.IMAGE_TAG }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3
        
      # - name: Generate Image Metadata
      #   id: meta
      #   run: |
      #     VERSION=$(date +%Y%m%d)-$(git rev-parse --short HEAD)
      #     echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
      #     echo "IMAGE_URL=${{ env.REGISTRY_DOMAIN }}/${{ env.IMAGE_NAME }}" >> $GITHUB_OUTPUT
      #     echo "Generated Tag: $VERSION"

      # - name: Build and Push Image
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     platforms: linux/arm64
      #     push: true
      #     tags: ${{ steps.meta.outputs.IMAGE_URL }}:${{ steps.meta.outputs.VERSION }}
      #     provenance: false

  #====================================================
  # CD Job: Deploy to Device via USP Controller
  #====================================================
  CD-Pipeline:
    name: CD-Pipeline
    # needs: CI-Pipeline
    runs-on: ubuntu-latest

    steps:
      - name: 1. Get Authentication Token and Set Env Var
        id: auth
        run: |
          TOKEN=$(curl --location --request PUT 'https://controller.benedicttiong.site/api/auth/login' \
          --header 'Content-Type: application/json' \
          --silent \
          --data-raw '{
              "email": "test@gmail.com",
              "password": "test"
          }' | tr -d '"')  

          echo $TOKEN